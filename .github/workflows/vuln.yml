name: Vulnerability and secrets scan
on: 
  push:
    branches:
      - main
    paths-ignore:
      - '.dockerignore'
      - '**/*.md'
      - 'LICENSE'
      - 'README.md'

  workflow_dispatch:

# env:
#     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

jobs:
    Code_Config_Git_Leaks_Scan:
        name: Code and Secrets Scan
        runs-on: ubuntu-24.04
        continue-on-error: true
        permissions:
            actions: read
            contents: read
        steps:
          - name: Checkout code
            uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
            with:
                fetch-depth: 0      
          - name: Run Gitleaks Scan
            uses: gitleaks/gitleaks-action@ff98106e4c7b2bc287b24eaf42907196329070c7
            continue-on-error: true
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                GITLEAKS_NOTIFY_USER_LIST: ${{ secrets.GITLEAKS_NOTIFY_USER_LIST }}
          - name: Log in to Docker Hub
            uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
            with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          - name: Build an image from the existing Dockerfile
            run: |
             docker build --file Dockerfile -t vuln.app:${{ github.sha }} .
          - name: Run Trivy Vulnerability Scan
            uses: aquasecurity/trivy-action@0.28.0
            with:
                image-ref: 'vuln.app:${{ github.sha }}'
                format: 'table'
                exit-code: '1'
                ignore-unfixed: true
                severity: 'HIGH,CRITICAL'
                vulnerability-type: 'os, library'
                
            # uses: aquasecurity/trivy-action@v1
            # with:
            #     image-ref: 'vuln.app:${{ github.sha }}'
            #     format: 'json'
            #     output: 'trivy-report.json'
            #     exit-code: '1'
            #     ignore-unfixed: true
            #     severity: 'HIGH,CRITICAL'
            #     vulnerability-type: 'os,library'

          # - name: Upload Vulnerability Scan Results
          #   uses: actions/upload-artifact@v4
          #   with:
          #     name: trivy-report
          #     path: trivy-report.json
          #     retention-days: 30

    Comprehensive_Security_Scan:
        runs-on: ubuntu-24.04
        needs: Code_Config_Git_Leaks_Scan
        name: Comprehensive Vulnerability Scan with Snyk
        steps:
           - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

           - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
             with:
              python-version: '3.10'

           
          #  - name: Install system dependencies
          #    run: |
          #     sudo apt-get update
          #     sudo apt-get install -y libpq-dev gcc

           - name: Install Python dependencies
             run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt

           - name: Run Snyk Open Source Scan
             uses: snyk/actions/python-3.10@master
            #  with:
            #   args: --severity-threshold=high --json-file-output=snyk-open-source-report.json
             env:
              SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

          #  - name: Upload Snyk Reports
          #    uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
          #    with:
          #     name: snyk-reports-${{ github.run_number }}
          #     path: snyk-open-source-report.json
          #     retention-days: 30

           - uses: snyk/actions/setup@master
             id: snyk
             with:
              snyk-version: v1.391.0

           - name: Snyk SAST Scan
             run: snyk code test --json > snyk-code-report.json
             env:
               SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

           - name: Upload Snyk SAST Report
             uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
             with:
              name: snyk-code-reports-${{ github.run_number }}
              path: snyk-code-report.json
              retention-days: 30


           - name: Slack Notification
             uses: rtCamp/action-slack-notify@v2
             env:
               SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
               SLACK_CHANNEL: aaron1
               SLACK_MESSAGE: "Kindly check the workflow"
             if: always()
            
          #  - name: Run Snyk Code Scan
          #    uses: 
          #  - uses: snyk/actions/setup@master
          #    with:
          #     snyk-version: v1.1299.1
          #  - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
          #    with:
          #     python-version: '3.13'
          #     cache: 'pip'
          #  - name: Cache Snyk Data
          #    uses: actions/cache@v4
          #    with:
          #       path: ~/.cache/snyk
          #       key: snyk-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          #  - name: Snyk SAST Scan
          #    run: |
          #        git ls-files '*.py' | xargs --no-run-if-empty snyk code test
          #        snyk code test ./ai_agent_deepseek.py ./app.py ./auth.py ./database.py  --org=${{ secrets.snykOrg }} --json > snyk-code-report.json || true
          #  - name: Snyk SCA Scan
          #    run: |
          #        pip3 install -r requirements.txt
          #        snyk test requirements.txt --org=${{ secrets.snykOrg }} --all-projects --severity-threshold=high --json > snyk-test-report.json || true

        #    - name: Snyk test && monitor
        #      run: |
        #         snyk test --all-projects --severity-threshold=high --json > snyk-test-report.json || true
        #         snyk monitor --all-projects --severity-threshold=high --json > snyk-monitor-report.json || true
        #         snyk code test --json > snyk-code-report.json || true
            #  env:
            #     SNYK_TOKEN: ${{ env.SNYK }}

       
       
          #  - name: Send mail 
          #    if: failure()
          #    uses: dawidd6/action-send-mail@6d98ae34d733f9a723a9e04e94f2f24ba05e1402
          #    with:
          #      server_address: ${{ secrets.MAIL_SERVER }}
          #      server_port: '587'
          #      username: ${{ secrets.MAIL_USERNAME }}
          #      password: ${{ secrets.MAIL_PASSWORD }}
          #      subject: Vulnerability Scan Report for ${{ github.repository }}
          #      to: ${{ secrets.MAIL_
          #      body: |
          #           Hi Team,
          #           The recent vulnerability scan for the repository ${{ github.repository }} has completed. 
                   
            # good to go

